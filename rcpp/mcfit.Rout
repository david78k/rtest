
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library("markovchain")
> library("Rcpp")
> 
> showClass("markovchain")
Class "markovchain" [package "markovchain"]

Slots:
                                                                          
Name:            states            byrow transitionMatrix             name
Class:        character          logical           matrix        character
> transmat <- matrix(c(0.4, 0.6,.3, .7), nrow = 2, byrow = TRUE)
> simplemc <- new("markovchain", states=c("a", "b"),
+ 		transitionMatrix = transmat,
+ 		name = "simplemc")
> 
> simplemc^4
simplemc^4 
 A  2 - dimensional discrete Markov Chain with following states 
 a b 
 The transition matrix   (by rows)  is defined as follows 
       a      b
a 0.3334 0.6666
b 0.3333 0.6667

> 
> steadyStates(simplemc)
             a         b
[1,] 0.3333333 0.6666667
> absorbingStates(simplemc)
character(0)
> simplemc[2, 1]
[1] 0.3
> t(simplemc)
Unnamed Markov chain 
 A  2 - dimensional discrete Markov Chain with following states 
 a b 
 The transition matrix   (by cols)  is defined as follows 
    a   b
a 0.4 0.3
b 0.6 0.7

> is.irreducible(simplemc)
[1] TRUE
> conditionalDistribution(simplemc, "b")
  a   b 
0.3 0.7 
> 
> sequence <- c("a", "b", "a", "a", "a", "a", "b", "a", "b", "a", "b", "a", "a", "b", "b", "b", "a")
> mcfit <- markovchainFit(data = sequence)
> 
> predict(mcfit$estimate, newdata = "b", n.ahead = 3)
[1] "a" "b" "a"
> mymc <- as(transmat, "markovchain")
> 
> summary(simplemc)
simplemc  Markov chain that is composed by: 
Closed classes: 
a b 
Transient classes: 
NONE 
The Markov chain is irreducible 
The absorbing states are: NONE
> 
> #plot(simplemc)
> 
> 
> proc.time()
   user  system elapsed 
  4.540   0.954   5.551 
